#!/usr/bin/env python3

import argparse

parser = argparse.ArgumentParser(description="Print an arrow to stdout.")
parser.add_argument(
    "-n",
    "--number",
    type=int,
    default=10,
    help="amount of arrows with size ranging from 0 to 'number' (default: 10)",
)
parser.add_argument(
    "-s",
    "--symbols",
    type=ascii,
    nargs="+",
    default=["'*'", "'#'", "'$'", "'@'", "'&'", "'+'" ],
    help="symbols to use (default: '*' '#' '$' '@' '&' '+')\n\tNOTE: requires '--fillers' of equal length to symbols",
)
parser.add_argument(
    "-f",
    "--fillers",
    type=ascii,
    nargs="+",
    default=["' '", "'.'", "'`'", "'_'", "'^'", "'~'"],
    help="fillers to use (default: ' ' '.' '`' '_' '^' '~')\n\tNOTE: requires '--symbols' be of equal length to fillers",
)

args = parser.parse_args()

if len(args.symbols) != len(args.fillers):
    raise ValueError("Number of 'symbols' and 'fillers' must be equal")

symbols = []
fillers = []

for i in range(len(args.symbols)):
    sym = args.symbols[i]
    fill = args.fillers[i]

    if len(sym) != 3:
        print("ERROR: Symbols must be surrounded by single quotes and contain a single character")
        print("---------------------------------------------------------------------------------\n")
        print("\t found symbol:", sym)
        print("\n")
        parser.print_help()
        exit(1)

    if len(fill) != 3:
        print("ERROR: Fillers must be surrounded by single quotes and contain a single character")
        print("---------------------------------------------------------------------------------\n")
        print("\t found filler:", fill)
        print("\n")
        parser.print_help()
        exit(1)

    if sym.endswith("\'") or sym.startswith("\'"):
        symbols.append(sym[1:-1])
    else:
        print("ERROR: Symbols must be surrounded by single quotes")
        print("--------------------------------------------------\n")
        parser.print_help()
        exit(1)

    if fill.endswith("\'") or fill.startswith("\'"):
        fillers.append(fill[1:-1])
    else:
        print("ERROR: Fillers must be surrounded by single quotes")
        print("--------------------------------------------------\n")
        parser.print_help()
        exit(1)

from src.arrow import print_random_combinations_arrows_to_stdout


print_random_combinations_arrows_to_stdout(
    amount=args.number,
    symbols=symbols,
    fillers=fillers,
)
